generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  email          String     @unique
  password       String
  uerType        UserType?  @default(User)
  isProfileSetUp Boolean    @default(false)
  expirationOtp  DateTime?
  otp            Int?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  agency         Agency[]
  landlord       Landlord[]
  tenant         Tenant[]

  @@map("Users")
}

model Agency {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  companyName String
  email       String    @unique
  phone       String
  uerType     UserType? @default(Agency)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])

  @@map("Agency")
}

model Landlord {
  id                   String    @id @default(auto()) @map("_id") @db.ObjectId
  fullName             String
  emiratesIdOrPassport String
  email                String    @unique
  phone                String
  uerType              UserType? @default(Landlord)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  userId               String    @db.ObjectId
  user                 User      @relation(fields: [userId], references: [id])

  @@map("Landlord")
}

model Tenant {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  fullName   String
  emiratesId String
  email      String    @unique
  phone      String
  uerType    UserType? @default(Tenant)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  userId     String    @db.ObjectId
  user       User      @relation(fields: [userId], references: [id])

  @@map("Tenant")
}

enum UserType {
  User
  Agency
  Landlord
  Tenant
}
